#################
#### GIT BAR ####
#################
# Git info variables
ZSH_THEME_GIT_PROMPT_PREFIX="[git:"
ZSH_THEME_GIT_PROMPT_SUFFIX="]$reset_color"
ZSH_THEME_GIT_PROMPT_DIRTY="$fg[red]+"
ZSH_THEME_GIT_PROMPT_CLEAN="$fg[green]"

# Checks if working tree is dirty
parse_git_dirty() {
	local STATUS=''
	local FLAGS
	FLAGS=('--porcelain')
	if [[ "$(command git config --get oh-my-zsh.hide-dirty)" != "1" ]]; then
		if [[ $POST_1_7_2_GIT -gt 0 ]]; then
			FLAGS+='--ignore-submodules=dirty'
		fi
		if [[ "$DISABLE_UNTRACKED_FILES_DIRTY" == "true" ]]; then
			FLAGS+='--untracked-files=no'
		fi
		STATUS=$(command git status ${FLAGS} 2> /dev/null | tail -n1)
	fi
	if [[ -n $STATUS ]]; then
		echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
	else
		echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
	fi
}

# The current branch name
function current_branch() {
	local ref
	ref=$($_omz_git_git_cmd symbolic-ref --quiet HEAD 2> /dev/null)
	local ret=$?
	if [[ $ret != 0 ]]; then
		[[ $ret == 128 ]] && return  # no git repo.
		ref=$($_omz_git_git_cmd rev-parse --short HEAD 2> /dev/null) || return
	fi
	echo ${ref#refs/heads/}
}

# Show git Info
function git_prompt_info() {
	ref=$(git symbolic-ref HEAD 2> /dev/null) || return
	echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

################
#### PROMPT ####
################
# Prompt spacing for
# the right area
function put_spacing() {

	# Git spacing info
	local git=$(git_prompt_info)
	if [ ${#git} != 0 ]; then
		((git=${#git} - 10))
	else
		git=0
	fi

	# How many spaces do we need
	local termwidth
	(( termwidth = ${COLUMNS} - 17 - ${#HOST} - ${#${PWD/$HOME/~}} - ${git} ))

	# Put the spaces
	local spacing=""
	for i in {1..$termwidth}; do
		spacing="${spacing} "
	done
	echo $spacing

}

# Prompt: Machine name, user name,
# location, git status and that awesome icon
PROMPT='
$fg[red]%n$reset_color at $fg[cyan]%m$reset_color in $fg[yellow]%~ $reset_color✌︎ $(put_spacing)$(git_prompt_info)
$fg[green]> $ $reset_color'

# Right Prompt, to
# display the time
RPROMPT="%T"

# Take Alias: Create a directory
# and goes inside
function take() {
	mkdir $1
	cd $1
}

###############
#### PATHS ####
###############
