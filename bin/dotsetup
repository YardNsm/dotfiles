#!/usr/bin/env bash

# ---------------------------------------------

source "$DOTFILES/_setup/initializer.sh"

# ---------------------------------------------

[[ -z $DOTFILES ]] && \
  declare -r DOTFILES=$HOME/dotfiles

# ---------------------------------------------

run_install() {
  shift
  source "$DOTFILES/install.sh" "$@"
}

# ---------------------------------------------

list_tasks() {

  print_title "Getting ready"
  check_for_sudo

  local topics=( $(get_all_topics) )
  local options=()

  local os
  os=$(get_os)

  for topic in "${topics[@]}"; do
    if [[ -f $topic/install.sh ]] || [[ -f $topic/install-$os.sh ]]; then
      options+=( $(basename "$topic") )
    fi
  done

  PS3=$'\n  Choose a topic to install: '

  print_title "Available topics\n"

  select opt in "${options[@]}"; do
    case $opt in
      *)

        if [ -z $opt ]; then
          print_error "Unavailable topic"
          exit 1;
        fi

        install_specific_topic "$opt"
        exit 0
        ;;
    esac
  done
}

# ---------------------------------------------

_execute_directly() {
  eval "$1" &> /dev/null
  print_result $? "${2}"
}

update_dotfiles() {
  print_title "Updating dotfiles"

  _execute_directly "cd $DOTFILES || exit 1" \
    "Performing inside the dotfiles repo"

  _execute_directly "git pull --rebase" \
    "Pull latest changes"

  _execute_directly "git submodule update --init --recursive --remote" \
    "Update submodules"

  print_divider

  print_success "Done!"
}

# ---------------------------------------------

print_help() {
  cat <<EOF

  Dotfiles maintenance

  Usage
    dotsetup <command> [options]

  Commands
    install                 Run the install script
    tasks                   List and run tasks
    update                  Fetch the latest version

  Options
    -h, --help              Show help output

  Options are being passed to the install script
  when running 'install' command.
EOF
}

# ---------------------------------------------

main() {
  case "$1" in
    install )
      run_install "$@"
      exit 0
      ;;
    tasks )
      list_tasks
      exit 0
      ;;
    update )
      update_dotfiles
      exit 0
      ;;
    "" | -h | --help)
      print_help
      exit 0
      ;;
    * )
      print_error "Unknown option $1";
      exit 1;
      ;;
  esac
}

main "$@"
